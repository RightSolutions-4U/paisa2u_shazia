Usercontroller: UI
[HttpPost]
        public async Task<ActionResult<Users>> ForgotPassword(IFormCollection collection)
        {
            Users user = new Users();
            var email = collection["gr_register_Email"];
            user.Email = email;
            StringContent content = new StringContent(JsonConvert.SerializeObject(user), Encoding.UTF8, "application/json");
            var client = new HttpClient();
            client.DefaultRequestHeaders.Clear();
            using (var response = await client.PostAsync("https://localhost:7172/api/Users/Login_check_email", content))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();

                var a = JsonConvert.DeserializeObject<Users>(apiResponse);
                return RedirectToAction(nameof(ForgotPasswordSendEmail));

            }
            
        }


[HttpGet]
        public IActionResult ResestPassword(string token, string email)
        {
            if (token == null || email == null)
            {
                return View();
            }
            return View();
        }
[HttpPost]
        public async Task<IActionResult> ResetThePassword(IFormCollection collection)
        {
            //Code to check valid user
            //On valid user it will go to home screen
            var Password = collection["Password"];
            var confirm_Password = collection["Confirmpassword"];
            if (Password == confirm_Password)
            {
                Users user = new Users();
                user.Email = collection["email"];
                user.Pwd = "abc";//required by login resource but not used
                StringContent content = new StringContent(JsonConvert.SerializeObject(user), Encoding.UTF8, "application/json");
                var client = new HttpClient();
                client.DefaultRequestHeaders.Clear();
                using (var response = await client.PostAsync("https://localhost:7172/api/Users/Login_check_email", content))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    var salt = PasswordHasher.GenerateSalt();
                    var pepper = Environment.GetEnvironmentVariable("PasswordHashExamplePepper");
                    var iteration = 3;
                    var PasswordHash = PasswordHasher.ComputeHash(Password, salt, pepper, iteration);
                    var a = JsonConvert.DeserializeObject<Users>(apiResponse);
                    var RegUser = new RegUserResource(
                    a.RegId,
                    a.Firstname,
                    a.Middlename,
                    a.Lastname,
                    a.Email,
                    a.Username,
                    "",
                    a.Referredby,
                    a.Regtype,
                    a.Vendortype,
                    a.Phonenumber,
                    a.Endate,
                    a.Enuser,
                    a.Substype,
                    a.Regstatus,
                    a.Autorenewal,
                    a.Qrpicture,
                    salt,
                    PasswordHash
                    );
                    var client2 = new HttpClient();
                    client2.DefaultRequestHeaders.Clear();
                    StringContent content2 = new StringContent(JsonConvert.SerializeObject(RegUser), Encoding.UTF8, "application/json");
                    using (var response_update = await client2.PostAsync("https://localhost:7172/api/Users/UpdateRegUser", content2))
                    {
                        string apiResponse_update = await response_update.Content.ReadAsStringAsync();
                        var a_update = JsonConvert.DeserializeObject<RegUserResource>(apiResponse);
                    }

                }
                return View("ResetPasswordConfirmation");
                

            }
            return View("ForgotPassword"); //for checking
        }
  //Added by Shazia Aug 4, 2023 for registration
        public ActionResult Register()
        {
            return View("Register");
        }
        [HttpGet]
        public ActionResult ForgotPassword()
        {
            return View("ForgotPassword");
        }
        [HttpGet]
        public ActionResult ResetPassword(string email)
        {
            ViewBag.email = email;
            return View("ResetPassword");
        }
        [HttpPost]
    
        //created by Shazia on Aug 6, 2023 for resetting and forget password
        [HttpPost]
        public ActionResult ForgotPasswordSendEmail(IFormCollection collection)
        {
            var forgotemail = collection["gr_register_Email"];
            MailMessage message = new MailMessage();

            message.From = new MailAddress("smalikbudhwani@gmail.com");
            message.To.Add(forgotemail);
            message.Bcc.Add("mohtashim1974@outlook.com");
            message.Subject = "testing forgot password";
            message.Body = "https://localhost:7257/Users/ResetPassword?email="+ forgotemail;

            var client = new SmtpClient
            {
                Host = "smtp.gmail.com",
                Port = 587 /*465*/,
                EnableSsl = true,
                DeliveryMethod = SmtpDeliveryMethod.Network,
                UseDefaultCredentials = false,
                Credentials = new NetworkCredential(message.From.ToString(), "yvfqhwixtvavufzj")
            };
            client.Send(message);
            //TempData["forgotemail"] = forgotemail;
            return View("ForgotPasswordConfirmation");
        }

    